                                          DETAILED EXPLANATION OF COIN CHANGE QUESTION


        
        dp =[]                  - empty list declaration   
        for i in range(m+1):    -run loop till m+1 or till len(S) 
            a= [0]*(n+1)               
            dp.append(a)
            dp[i][0] = 1               - to get sum = 0 we only have 1 way by excluding the coins  so there is only one way so initialed with 1 
            
            
        
        here i is coin value and j is sum value to be obtained from coin values
        
        for i in range(1, m+1):             # for filling rows
            for j in range(1, n+1):         #another loop within a row for filling columns of that particular row
            
                
                if S[i-1] > j:              # if the row value(coin value is greater than column value(sum value)example row(coin value = 10 and column (sum value is 2 then
                
                    dp[i][j] = dp[i-1][j]       #then we use the previous row or coin value to fill column with previous row value for that column
                                                example for dp[10][2] we have to go to dp[9][2] and put that value in dp[10][2]
                                            
                else:
                    
                    here comes the 2 cases if coin value is excluded or included and sum of both cases will be filled in column
                    
                    dp[i][j] = dp[i-1][j] + dp[i][j - S[i-1]]   
                    
                    for exclused case column will be same row will be changed and if row(coin value is excluded then go to previous row for that column lie for dp[3][3] go to dp[2][3] if coin value 3 is excluded so value of excluded case for coin value 3 is dp[2][3]
                    for included case row will be same and column will be changed for this case we will find included value by subtracting coin value from sum value or row number from column number example coin value = 3 and sum value
                    is 3 so by doing subtraction we get 0 and now we will go to column 0 of row 3(coin value ) and put the value of dp[3][0] in included case
                    
                
                    Then we will add both the results of included and excluded case and put that value in dp[i][j]               
        return dp[m][n]            
      
        


